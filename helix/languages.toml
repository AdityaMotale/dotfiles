#
# Rust
#

[[language]]
name = "rust"
auto-format = true
formatter = { command = "rustfmt" }
roots = [
  "Cargo.toml",
  "Cargo.lock"
]
language-servers = ["rust-analyzer"]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

#
# C
#

[[language]]
name = "c"
scope = "source.c"
file-types = ["c", "h"]
auto-format = true
formatter = { command = "clang-format" }
roots = ["Makefile"]
language-servers = ["clangd"]

[language-server.clangd]
command = "clangd"

#
# ASM
#

[[language]]
name = "assembly"
scope = "source.asm"
file-types = ["asm"]
auto-format = false
language-servers = ["asm-lsp"]

[language-server.asm-lsp]
command = "asm-lsp"

#
# python
#

[[language]]
name = "python"
language-id = "python"
roots = ["pyproject.toml", "setup.py", "poetry.lock", ".git", ".jj", ".venv/"]
language-servers = ["ruff", "pyright"]
auto-format = true
formatter = { command = "ruff", args = ["format", "-" ] }
file-types = ["py", "ipynb"]
comment-token = "#"
shebangs = ["python"]

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.ruff]
command = "ruff"
args = ["server"]
environment = { "RUFF_TRACE" = "messages" }

[language-server.ruff.config.settings]
lineLength = 120
logLevel = "debug"

[language-server.ruff.config.settings.lint]
select = ["E", "F", "W", "B", "I", "RUF", "N", "LOG", "ERA", "W", "D", "UP", "ANN", "ASYNC", "S", "RET", "TCH", "ARG", "PTH", "DOC"]
preview = true

[language-server.ruff.config.settings.format]
preview = true
quote-style = "double"
docstring-code-format = true
indent-style = "space"
